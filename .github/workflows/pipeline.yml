name: 'resource-pipeline'
on:
  push:
  pull_request:
    types: [ opened, reopened ]
jobs:
  unit-test:
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - uses: actions/checkout@v1

      - name: Cache go dependencies
        id: unit-cache-go-dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install go dependencies
        if: steps.unit-cache-go-dependencies.outputs.cache-hit != 'true'
        run: go get ./...

      - name: Test
        run: make ci-unit-test

  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.15.x'

      - uses: actions/checkout@v1

      - name: Install tooling
        run: |
          make ci-install-go-tools
          make ci-install-ci-tools
      - name: Cache go dependencies
        id: package-cache-go-dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-prod-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-prod-

      - name: Install dependencies
        if: steps.package-cache-go-dependencies.outputs.cache-hit != 'true'
        run: go get ./...

      - name: Linting, formatting, and other static code analyses
        run: make ci-static-analysis

      - name: Build snapshot artifacts
        run: make ci-build-snapshot-packages

      - run: docker images unikraft/concourse-github-pr-approval-resource

      - name: Test production image
        run: make ci-test-production-image

  release:
    needs: [ unit-test, build-artifacts ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:

      - uses: actions/setup-go@v1
        with:
          go-version: '1.15.x'

      - uses: actions/checkout@v1

      - name: Install tooling
        run: make ci-install-ci-tools

      - name: Cache go dependencies
        id: release-cache-go-dependencies
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-prod-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-prod-

      - name: Install dependencies
        if: steps.release-cache-go-dependencies.outputs.cache-hit != 'true'
        run: go get ./...

      - name: Docker login
        run: make ci-docker-login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish GitHub release
        run: make ci-release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}

      - name: Docker logout
        run: make ci-docker-logout

      - name: Smoke test published image
        run: make ci-test-production-image
